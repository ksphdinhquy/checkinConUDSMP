{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\"; // in the morning, in the afternoon, in the evening, at night\n\nexport class DayPeriodParser extends Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 80);\n    _defineProperty(this, \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return match.dayPeriod(dateString, {\n          width: 'wide',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n    }\n  }\n  set(date, _flags, value) {\n    date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Parser","dayPeriodEnumToHours","DayPeriodParser","constructor","arguments","parse","dateString","token","match","dayPeriod","width","context","set","date","_flags","setUTCHours"],"sources":["/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Parser } from \"../Parser.js\";\nimport { dayPeriodEnumToHours } from \"../utils.js\"; // in the morning, in the afternoon, in the evening, at night\n\nexport class DayPeriodParser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 80);\n\n    _defineProperty(this, \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return match.dayPeriod(dateString, {\n          width: 'wide',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }) || match.dayPeriod(dateString, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n}"],"mappings":"AAAA,SAASA,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,SAASQ,MAAM,QAAQ,cAAc;AACrC,SAASC,oBAAoB,QAAQ,aAAa,CAAC,CAAC;;AAEpD,OAAO,MAAMC,eAAe,SAASF,MAAM,CAAC;EAC1CG,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,GAAGC,SAAS,CAAC;IAEnBb,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC;IAErCA,eAAe,CAAC,IAAI,EAAE,oBAAoB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACnE;EAEAc,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;MACR,KAAK,IAAI;MACT,KAAK,KAAK;QACR,OAAOC,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UACjCI,KAAK,EAAE,aAAa;UACpBC,OAAO,EAAE;QACX,CAAC,CAAC,IAAIH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAChCI,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;MAEJ,KAAK,OAAO;QACV,OAAOH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UACjCI,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;MAEJ,KAAK,MAAM;MACX;QACE,OAAOH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UACjCI,KAAK,EAAE,MAAM;UACbC,OAAO,EAAE;QACX,CAAC,CAAC,IAAIH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAChCI,KAAK,EAAE,aAAa;UACpBC,OAAO,EAAE;QACX,CAAC,CAAC,IAAIH,KAAK,CAACC,SAAS,CAACH,UAAU,EAAE;UAChCI,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE;QACX,CAAC,CAAC;IACN;EACF;EAEAC,GAAGA,CAACC,IAAI,EAAEC,MAAM,EAAEpB,KAAK,EAAE;IACvBmB,IAAI,CAACE,WAAW,CAACd,oBAAoB,CAACP,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACtD,OAAOmB,IAAI;EACb;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}