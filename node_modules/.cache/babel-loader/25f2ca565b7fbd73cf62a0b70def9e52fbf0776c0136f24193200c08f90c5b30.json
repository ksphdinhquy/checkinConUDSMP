{"ast":null,"code":"var _jsxFileName = \"/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/src/components/UpdateUserModal.jsx\",\n  _s = $RefreshSig$();\nimport { Modal } from \"antd\";\nimport { doc, setDoc, collection, getDocs } from \"firebase/firestore\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  hovaten: \"\",\n  donvi: \"\",\n  sodienthoai: \"\",\n  email: \"\",\n  room: \"\" // Thêm trường room\n};\nconst UpdateUserModal = ({\n  modalIsOpen,\n  setIsOpen,\n  initForm\n}) => {\n  _s();\n  const [form, setForm] = useState(initState);\n  const [rooms, setRooms] = useState([]); // State để lưu danh sách phòng\n\n  // Hàm xử lý thay đổi input\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value\n    }));\n  };\n\n  // Hàm xử lý gửi form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedForm = {\n      ...form\n    };\n    for (const key in updatedForm) {\n      if (!updatedForm[key]) {\n        delete updatedForm[key];\n      }\n    }\n    const usersRef = doc(db, \"users\", form.id);\n    try {\n      await setDoc(usersRef, updatedForm);\n      toast.success(\"Cập nhật thành công!\", {\n        position: \"top-right\",\n        autoClose: 3000\n      });\n    } catch (error) {\n      toast.error(\"Cập nhật thất bại!\", {\n        position: \"top-right\"\n      });\n    } finally {\n      setIsOpen(false);\n      setForm(initState);\n    }\n  };\n\n  // Lấy danh sách phòng từ Firestore\n  const fetchRooms = async () => {\n    const roomsCollection = collection(db, \"room\");\n    const roomSnapshot = await getDocs(roomsCollection);\n    const roomList = roomSnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setRooms(roomList);\n  };\n\n  // Cập nhật form khi có dữ liệu khởi tạo\n  useEffect(() => {\n    if (initForm) {\n      setForm(initForm);\n    }\n    fetchRooms(); // Gọi hàm lấy dữ liệu phòng khi modal mở\n  }, [initForm]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"C\\u1EADp nh\\u1EADt th\\xF4ng tin \\u0111\\u1EA1i bi\\u1EC3u\",\n    centered: true,\n    open: modalIsOpen,\n    onCancel: () => {\n      setForm(initState);\n      setIsOpen(false);\n    },\n    footer: null,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.keys(initState).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0 mt-2\",\n          children: key === \"hovaten\" ? \"Họ và tên\" : key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), key === \"room\" ?\n        /*#__PURE__*/\n        // Thêm trường select cho room\n        _jsxDEV(\"select\", {\n          className: \"form-control\",\n          name: \"room\",\n          value: form.room || \"\" // Đảm bảo giá trị mặc định là string rỗng\n          ,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Ch\\u1ECDn ph\\xF2ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), \" \", rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: room.name,\n            children: room.name\n          }, room.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: key === \"sodienthoai\" ? \"tel\" : \"text\",\n          placeholder: key === \"hovaten\" ? \"Người đại diện\" : \"\",\n          onChange: handleChange,\n          name: key,\n          value: form[key],\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        style: {\n          marginTop: \"1rem\",\n          justifyContent: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary text-white\",\n          children: \"L\\u01B0u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateUserModal, \"osmLHGZCZ5f93b23KJVQZyldgeo=\");\n_c = UpdateUserModal;\nexport default _c2 = /*#__PURE__*/memo(UpdateUserModal);\nvar _c, _c2;\n$RefreshReg$(_c, \"UpdateUserModal\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Modal","doc","setDoc","collection","getDocs","React","memo","useEffect","useState","toast","db","jsxDEV","_jsxDEV","initState","hovaten","donvi","sodienthoai","email","room","UpdateUserModal","modalIsOpen","setIsOpen","initForm","_s","form","setForm","rooms","setRooms","handleChange","e","name","value","target","prevForm","handleSubmit","preventDefault","updatedForm","key","usersRef","id","success","position","autoClose","error","fetchRooms","roomsCollection","roomSnapshot","roomList","docs","map","data","title","centered","open","onCancel","footer","children","onSubmit","Object","keys","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","type","placeholder","style","marginTop","justifyContent","_c","_c2","$RefreshReg$"],"sources":["/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/src/components/UpdateUserModal.jsx"],"sourcesContent":["import { Modal } from \"antd\";\nimport { doc, setDoc, collection, getDocs } from \"firebase/firestore\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { db } from \"../firebase\";\n\nconst initState = {\n  hovaten: \"\",\n  donvi: \"\",\n  sodienthoai: \"\",\n  email: \"\",\n  room: \"\", // Thêm trường room\n};\n\nconst UpdateUserModal = ({ modalIsOpen, setIsOpen, initForm }) => {\n  const [form, setForm] = useState(initState);\n  const [rooms, setRooms] = useState([]); // State để lưu danh sách phòng\n\n  // Hàm xử lý thay đổi input\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prevForm) => ({\n      ...prevForm,\n      [name]: value,\n    }));\n  };\n\n  // Hàm xử lý gửi form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const updatedForm = { ...form };\n    for (const key in updatedForm) {\n      if (!updatedForm[key]) {\n        delete updatedForm[key];\n      }\n    }\n\n    const usersRef = doc(db, \"users\", form.id);\n\n    try {\n      await setDoc(usersRef, updatedForm);\n      toast.success(\"Cập nhật thành công!\", {\n        position: \"top-right\",\n        autoClose: 3000,\n      });\n    } catch (error) {\n      toast.error(\"Cập nhật thất bại!\", {\n        position: \"top-right\",\n      });\n    } finally {\n      setIsOpen(false);\n      setForm(initState);\n    }\n  };\n\n  // Lấy danh sách phòng từ Firestore\n  const fetchRooms = async () => {\n    const roomsCollection = collection(db, \"room\");\n    const roomSnapshot = await getDocs(roomsCollection);\n    const roomList = roomSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    setRooms(roomList);\n  };\n\n  // Cập nhật form khi có dữ liệu khởi tạo\n  useEffect(() => {\n    if (initForm) {\n      setForm(initForm);\n    }\n    fetchRooms(); // Gọi hàm lấy dữ liệu phòng khi modal mở\n  }, [initForm]);\n\n  return (\n    <Modal\n      title=\"Cập nhật thông tin đại biểu\"\n      centered\n      open={modalIsOpen}\n      onCancel={() => {\n        setForm(initState);\n        setIsOpen(false);\n      }}\n      footer={null}\n    >\n      <form onSubmit={handleSubmit}>\n        {Object.keys(initState).map((key) => (\n          <div key={key}>\n            <p className=\"mb-0 mt-2\">{key === \"hovaten\" ? \"Họ và tên\" : key}</p>\n            {key === \"room\" ? ( // Thêm trường select cho room\n              <select\n                className=\"form-control\"\n                name=\"room\"\n                value={form.room || \"\"} // Đảm bảo giá trị mặc định là string rỗng\n                onChange={handleChange}\n                required\n              >\n                <option value=\"\">Chọn phòng</option> {/* Hiển thị thông báo \"Chọn phòng\" */}\n                {rooms.map(room => (\n                  <option key={room.id} value={room.name}>\n                    {room.name}\n                  </option>\n                ))}\n              </select>\n            ) : (\n              <input\n                className=\"form-control\"\n                type={key === \"sodienthoai\" ? \"tel\" : \"text\"}\n                placeholder={key === \"hovaten\" ? \"Người đại diện\" : \"\"}\n                onChange={handleChange}\n                name={key}\n                value={form[key]}\n                required\n              />\n            )}\n          </div>\n        ))}\n        <div\n          className=\"d-flex align-items-center\"\n          style={{ marginTop: \"1rem\", justifyContent: \"flex-end\" }}\n        >\n          <button type=\"submit\" className=\"btn btn-primary text-white\">\n            Lưu\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default memo(UpdateUserModal);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}