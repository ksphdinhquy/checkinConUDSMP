{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits, isLeapYearIndex } from \"../utils.js\";\nexport class DayOfYearParser extends Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 90);\n    _defineProperty(this, \"subpriority\", 1);\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'D':\n      case 'DD':\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case 'Do':\n        return match.ordinalNumber(dateString, {\n          unit: 'date'\n        });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n  validate(date, value) {\n    var year = date.getUTCFullYear();\n    var isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n  set(date, _flags, value) {\n    date.setUTCMonth(0, value);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n}","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Parser","numericPatterns","parseNumericPattern","parseNDigits","isLeapYearIndex","DayOfYearParser","constructor","arguments","parse","dateString","token","match","dayOfYear","ordinalNumber","unit","length","validate","date","year","getUTCFullYear","isLeapYear","set","_flags","setUTCMonth","setUTCHours"],"sources":["/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js"],"sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Parser } from \"../Parser.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { parseNumericPattern, parseNDigits, isLeapYearIndex } from \"../utils.js\";\nexport class DayOfYearParser extends Parser {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"priority\", 90);\n\n    _defineProperty(this, \"subpriority\", 1);\n\n    _defineProperty(this, \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n  }\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case 'D':\n      case 'DD':\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n\n      case 'Do':\n        return match.ordinalNumber(dateString, {\n          unit: 'date'\n        });\n\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    var year = date.getUTCFullYear();\n    var isLeapYear = isLeapYearIndex(year);\n\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setUTCMonth(0, value);\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n\n}"],"mappings":"AAAA,SAASA,eAAeA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EAAE,IAAID,GAAG,IAAID,GAAG,EAAE;IAAEG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEG,UAAU,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EAAE;EAAE,OAAOF,GAAG;AAAE;AAEhN,SAASQ,MAAM,QAAQ,cAAc;AACrC,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,mBAAmB,EAAEC,YAAY,EAAEC,eAAe,QAAQ,aAAa;AAChF,OAAO,MAAMC,eAAe,SAASL,MAAM,CAAC;EAC1CM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,GAAGC,SAAS,CAAC;IAEnBhB,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC;IAErCA,eAAe,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;IAEvCA,eAAe,CAAC,IAAI,EAAE,oBAAoB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAC1H;EAEAiB,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;MACR,KAAK,IAAI;QACP,OAAOR,mBAAmB,CAACD,eAAe,CAACW,SAAS,EAAEH,UAAU,CAAC;MAEnE,KAAK,IAAI;QACP,OAAOE,KAAK,CAACE,aAAa,CAACJ,UAAU,EAAE;UACrCK,IAAI,EAAE;QACR,CAAC,CAAC;MAEJ;QACE,OAAOX,YAAY,CAACO,KAAK,CAACK,MAAM,EAAEN,UAAU,CAAC;IACjD;EACF;EAEAO,QAAQA,CAACC,IAAI,EAAEvB,KAAK,EAAE;IACpB,IAAIwB,IAAI,GAAGD,IAAI,CAACE,cAAc,CAAC,CAAC;IAChC,IAAIC,UAAU,GAAGhB,eAAe,CAACc,IAAI,CAAC;IAEtC,IAAIE,UAAU,EAAE;MACd,OAAO1B,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;IACnC,CAAC,MAAM;MACL,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;IACnC;EACF;EAEA2B,GAAGA,CAACJ,IAAI,EAAEK,MAAM,EAAE5B,KAAK,EAAE;IACvBuB,IAAI,CAACM,WAAW,CAAC,CAAC,EAAE7B,KAAK,CAAC;IAC1BuB,IAAI,CAACO,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5B,OAAOP,IAAI;EACb;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}