{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\nexport function stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\nfunction useWatch() {\n  var dependencies = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var form = arguments.length > 1 ? arguments[1] : undefined;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n    var getFieldsValue = formInstance.getFieldsValue,\n      getInternalHooks = formInstance.getInternalHooks;\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n      registerWatch = _getInternalHooks.registerWatch;\n    var cancelRegister = registerWatch(function (store) {\n      var newValue = getValue(store, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  },\n  // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return value;\n}\nexport default useWatch;","map":{"version":3,"names":["_slicedToArray","FieldContext","warning","HOOK_MARK","useState","useContext","useEffect","useRef","useMemo","getNamePath","getValue","stringify","value","JSON","err","Math","random","useWatch","dependencies","arguments","length","undefined","form","_useState","_useState2","setValue","valueStr","valueStrRef","current","fieldContext","formInstance","isValidForm","_init","process","env","NODE_ENV","namePath","namePathRef","getFieldsValue","getInternalHooks","_getInternalHooks","registerWatch","cancelRegister","store","newValue","nextValueStr","initialValue"],"sources":["/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/rc-field-form/es/useWatch.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { FieldContext } from '.';\nimport warning from \"rc-util/es/warning\";\nimport { HOOK_MARK } from './FieldContext';\nimport { useState, useContext, useEffect, useRef, useMemo } from 'react';\nimport { getNamePath, getValue } from './utils/valueUtil';\nexport function stringify(value) {\n  try {\n    return JSON.stringify(value);\n  } catch (err) {\n    return Math.random();\n  }\n}\n\nfunction useWatch() {\n  var dependencies = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var form = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var valueStr = useMemo(function () {\n    return stringify(value);\n  }, [value]);\n  var valueStrRef = useRef(valueStr);\n  valueStrRef.current = valueStr;\n  var fieldContext = useContext(FieldContext);\n  var formInstance = form || fieldContext;\n  var isValidForm = formInstance && formInstance._init; // Warning if not exist form instance\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(isValidForm, 'useWatch requires a form instance since it can not auto detect from context.');\n  }\n\n  var namePath = getNamePath(dependencies);\n  var namePathRef = useRef(namePath);\n  namePathRef.current = namePath;\n  useEffect(function () {\n    // Skip if not exist form instance\n    if (!isValidForm) {\n      return;\n    }\n\n    var getFieldsValue = formInstance.getFieldsValue,\n        getInternalHooks = formInstance.getInternalHooks;\n\n    var _getInternalHooks = getInternalHooks(HOOK_MARK),\n        registerWatch = _getInternalHooks.registerWatch;\n\n    var cancelRegister = registerWatch(function (store) {\n      var newValue = getValue(store, namePathRef.current);\n      var nextValueStr = stringify(newValue); // Compare stringify in case it's nest object\n\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(newValue);\n      }\n    }); // TODO: We can improve this perf in future\n\n    var initialValue = getValue(getFieldsValue(), namePathRef.current);\n    setValue(initialValue);\n    return cancelRegister;\n  }, // We do not need re-register since namePath content is the same\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return value;\n}\n\nexport default useWatch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}