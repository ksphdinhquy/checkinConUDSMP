{"ast":null,"code":"import React, { isValidElement, useRef, useLayoutEffect, useEffect, cloneElement, useReducer, useState, forwardRef } from 'react';\nimport cx from 'clsx';\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isStr(v) {\n  return typeof v === 'string';\n}\nfunction isFn(v) {\n  return typeof v === 'function';\n}\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\nfunction isToastIdValid(toastId) {\n  return toastId === 0 || toastId;\n}\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\nconst POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nconst TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\n/**\r\n * Used to collapse toast after exit animation\r\n */\nfunction collapseToast(node, done, duration\n/* Default.COLLAPSE_DURATION */) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n  const {\n    scrollHeight,\n    style\n  } = node;\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\nfunction cssTransition(_ref) {\n  let {\n    enter,\n    exit,\n    appendPosition = false,\n    collapse = true,\n    collapseDuration = 300\n    /* Default.COLLAPSE_DURATION */\n  } = _ref;\n  return function ToastTransition(_ref2) {\n    let {\n      children,\n      position,\n      preventExitTransition,\n      done,\n      nodeRef,\n      isIn\n    } = _ref2;\n    const enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    const exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    const baseClassName = useRef();\n    const animationStep = useRef(0\n    /* AnimationStep.Enter */);\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n    function onEnter() {\n      const node = nodeRef.current;\n      baseClassName.current = node.className;\n      node.className += \" \" + enterClassName;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n    function onEntered(e) {\n      if (e.target !== nodeRef.current) return;\n      const node = nodeRef.current;\n      node.dispatchEvent(new Event(\"d\"\n      /* SyntheticEvent.ENTRANCE_ANIMATION_END */));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (animationStep.current === 0\n      /* AnimationStep.Enter */ && e.type !== 'animationcancel') {\n        node.className = baseClassName.current;\n      }\n    }\n    function onExit() {\n      animationStep.current = 1\n      /* AnimationStep.Exit */;\n      const node = nodeRef.current;\n      node.className += \" \" + exitClassName;\n      node.addEventListener('animationend', onExited);\n    }\n    function onExited() {\n      const node = nodeRef.current;\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n    return React.createElement(React.Fragment, null, children);\n  };\n}\nfunction toToastItem(toast, status) {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\nconst eventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n  on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event).filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n    return this;\n  },\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit(event) {\n    this.list.has(event) && this.list.get(event).forEach(callback => {\n      const timer = setTimeout(() => {\n        // @ts-ignore\n        callback(...[].slice.call(arguments, 1));\n      }, 0);\n      this.emitQueue.has(event) || this.emitQueue.set(event, []);\n      this.emitQueue.get(event).push(timer);\n    });\n  }\n};\nconst Svg = _ref => {\n  let {\n    theme,\n    type,\n    ...rest\n  } = _ref;\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: theme === 'colored' ? 'currentColor' : \"var(--toastify-icon-color-\" + type + \")\",\n    ...rest\n  });\n};\nfunction Warning(props) {\n  return React.createElement(Svg, {\n    ...props\n  }, React.createElement(\"path\", {\n    d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n  }));\n}\nfunction Info(props) {\n  return React.createElement(Svg, {\n    ...props\n  }, React.createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n  }));\n}\nfunction Success(props) {\n  return React.createElement(Svg, {\n    ...props\n  }, React.createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n  }));\n}\nfunction Error(props) {\n  return React.createElement(Svg, {\n    ...props\n  }, React.createElement(\"path\", {\n    d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n  }));\n}\nfunction Spinner() {\n  return React.createElement(\"div\", {\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__spinner\"\n  });\n}\nconst Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\nconst maybeIcon = type => type in Icons;\nfunction getIcon(_ref2) {\n  let {\n    theme,\n    type,\n    isLoading,\n    icon\n  } = _ref2;\n  let Icon = null;\n  const iconProps = {\n    theme,\n    type\n  };\n  if (icon === false) ;else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n  return Icon;\n}\nfunction useToastContainer(props) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map()).current;\n  const isToastActive = id => toastIds.indexOf(id) !== -1;\n  const instance = useRef({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* Event.WillUnmount */).on(0\n    /* Event.Show */, buildToast).on(1\n    /* Event.Clear */, toastId => containerRef.current && removeToast(toastId)).on(5\n    /* Event.ClearWaitingQueue */, clearWaitingQueue).emit(2\n    /* Event.DidMount */, instance);\n    return () => {\n      toastToRender.clear();\n      eventManager.emit(3\n      /* Event.WillUnmount */, instance);\n    };\n  }, []);\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n  function clearWaitingQueue(_ref) {\n    let {\n      containerId\n    } = _ref;\n    const {\n      limit\n    } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n  function removeToast(toastId) {\n    setToastIds(state => isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []);\n  }\n  function dequeueToast() {\n    const {\n      toastContent,\n      toastProps,\n      staleId\n    } = instance.queue.shift();\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n  function isNotValid(options) {\n    return !containerRef.current || instance.props.enableMultiContainer && options.containerId !== instance.props.containerId || toastToRender.has(options.toastId) && options.updateId == null;\n  } // this function and all the function called inside needs to rely on refs\n\n  function buildToast(content, _ref2) {\n    let {\n      delay,\n      staleId,\n      ...options\n    } = _ref2;\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    const {\n      toastId,\n      updateId,\n      data\n    } = options;\n    const {\n      props\n    } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n    if (isNotAnUpdate) instance.count++;\n    const toastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: options.draggablePercent || props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading ? false : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId), 'removed');\n        toastToRender.delete(toastId);\n        eventManager.emit(4\n        /* Event.Change */, removed);\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId) ? instance.count - 1 : instance.count - instance.displayedToast;\n        if (instance.count < 0) instance.count = 0;\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n    toastProps.iconOut = getIcon(toastProps);\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    toastProps.closeButton = props.closeButton;\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n    let toastContent = content;\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast,\n        toastProps,\n        data\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n    if (props.limit && props.limit > 0 && instance.count > props.limit && isNotAnUpdate) {\n      instance.queue.push({\n        toastContent,\n        toastProps,\n        staleId\n      });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n  function appendToast(content, toastProps, staleId) {\n    const {\n      toastId\n    } = toastProps;\n    if (staleId) toastToRender.delete(staleId);\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(4\n    /* Event.Change */, toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated'));\n  }\n  function getToastToRender(cb) {\n    const toRender = new Map();\n    const collection = Array.from(toastToRender.values());\n    if (props.newestOnTop) collection.reverse();\n    collection.forEach(toast => {\n      const {\n        position\n      } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position).push(toast);\n    });\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\nfunction useToast(props) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef(null);\n  const drag = useRef({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const {\n    autoClose,\n    pauseOnHover,\n    closeToast,\n    onClick,\n    closeOnClick\n  } = props;\n  useEffect(() => {\n    syncProps.current = props;\n  });\n  useEffect(() => {\n    if (toastRef.current) toastRef.current.addEventListener(\"d\"\n    /* SyntheticEvent.ENTRANCE_ANIMATION_END */, playToast, {\n      once: true\n    });\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose)) props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n  function onDragStart(e) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n      if (props.draggableDirection === \"x\"\n      /* Direction.X */) {\n        drag.start = drag.x;\n        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = toast.offsetHeight * (props.draggablePercent === 80\n        /* Default.DRAGGABLE_PERCENT */ ? props.draggablePercent * 1.5 : props.draggablePercent / 100);\n      }\n    }\n  }\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const {\n        top,\n        bottom,\n        left,\n        right\n      } = drag.boundingRect;\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n  function playToast() {\n    setIsRunning(true);\n  }\n  function pauseToast() {\n    setIsRunning(false);\n  }\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n  function onDragMove(e) {\n    const toast = toastRef.current;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n      if (props.draggableDirection === \"x\"\n      /* Direction.X */) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n  const eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n  if (closeOnClick) {\n    eventHandlers.onClick = e => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\nfunction CloseButton(_ref) {\n  let {\n    closeToast,\n    theme,\n    ariaLabel = 'close'\n  } = _ref;\n  return React.createElement(\"button\", {\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__close-button \" + \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__close-button--\" + theme,\n    type: \"button\",\n    onClick: e => {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\nfunction ProgressBar(_ref) {\n  let {\n    delay,\n    isRunning,\n    closeToast,\n    type,\n    hide,\n    className,\n    style: userStyle,\n    controlledProgress,\n    progress,\n    rtl,\n    isIn,\n    theme\n  } = _ref;\n  const style = {\n    ...userStyle,\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  const defaultClassName = cx(\"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--controlled\" : \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--animated\", \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar-theme--\" + theme, \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__progress-bar--\" + type, {\n    [\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__progress-bar--rtl\"]: rtl\n  });\n  const classNames = isFn(className) ? className({\n    rtl,\n    type,\n    defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  const animationEvent = {\n    [controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd']: controlledProgress && progress < 1 ? null : () => {\n      isIn && closeToast();\n    }\n  }; // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style,\n    ...animationEvent\n  });\n}\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\nconst Toast = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast\", \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast-theme--\" + theme, \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__toast--\" + type, {\n    [\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast--rtl\"]: rtl\n  });\n  const cssClasses = isFn(className) ? className({\n    rtl,\n    position,\n    type,\n    defaultClassName\n  }) : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const closeButtonProps = {\n    closeToast,\n    type,\n    theme\n  };\n  let Close = null;\n  if (closeButton === false) ;else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n  return React.createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, React.createElement(\"div\", {\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses,\n    ...eventHandlers,\n    style: style,\n    ref: toastRef\n  }, React.createElement(\"div\", {\n    ...(isIn && {\n      role: role\n    }),\n    className: isFn(bodyClassName) ? bodyClassName({\n      type\n    }) : cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }, iconOut != null && React.createElement(\"div\", {\n    className: cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-icon\", {\n      [\"Toastify\"\n      /* Default.CSS_NAMESPACE */ + \"--animate-icon \" + \"Toastify\"\n      /* Default.CSS_NAMESPACE */ + \"__zoom-enter\"]: !isLoading\n    })\n  }, iconOut), React.createElement(\"div\", null, children)), Close, (autoClose || isProgressControlled) && React.createElement(ProgressBar, {\n    ...(updateId && !isProgressControlled ? {\n      key: \"pb-\" + updateId\n    } : {}),\n    rtl: rtl,\n    theme: theme,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  })));\n};\nconst Bounce = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__bounce-exit\",\n  appendPosition: true\n});\nconst Slide = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__slide-exit\",\n  appendPosition: true\n});\nconst Zoom = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__zoom-exit\"\n});\nconst Flip = cssTransition({\n  enter: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"--animate \" + \"Toastify\"\n  /* Default.CSS_NAMESPACE */ + \"__flip-exit\"\n});\n\n// https://github.com/yannickcr/eslint-plugin-react/issues/3140\nconst ToastContainer = forwardRef((props, ref) => {\n  const {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  } = useToastContainer(props);\n  const {\n    className,\n    style,\n    rtl,\n    containerId\n  } = props;\n  function getClassName(position) {\n    const defaultClassName = cx(\"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-container\", \"Toastify\"\n    /* Default.CSS_NAMESPACE */ + \"__toast-container--\" + position, {\n      [\"Toastify\"\n      /* Default.CSS_NAMESPACE */ + \"__toast-container--rtl\"]: rtl\n    });\n    return isFn(className) ? className({\n      position,\n      rtl,\n      defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n  useEffect(() => {\n    if (ref) {\n      ref.current = containerRef.current;\n    }\n  }, []);\n  return React.createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* Default.CSS_NAMESPACE */,\n\n    id: containerId\n  }, getToastToRender((position, toastList) => {\n    const containerStyle = !toastList.length ? {\n      ...style,\n      pointerEvents: 'none'\n    } : {\n      ...style\n    };\n    return React.createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map((_ref, i) => {\n      let {\n        content,\n        props: toastProps\n      } = _ref;\n      return React.createElement(Toast, {\n        ...toastProps,\n        isIn: isToastActive(toastProps.toastId),\n        style: {\n          ...toastProps.style,\n          '--nth': i + 1,\n          '--len': toastList.length\n        },\n        key: \"toast-\" + toastProps.key\n      }, content);\n    }));\n  }));\n});\nToastContainer.displayName = 'ToastContainer';\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* Default.DRAGGABLE_PERCENT */,\n\n  draggableDirection: \"x\"\n  /* Direction.X */,\n\n  role: 'alert',\n  theme: 'light'\n};\nlet containers = new Map();\nlet latestInstance;\nlet queue = [];\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  let {\n    containerId\n  } = _ref;\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\nfunction dispatchToast(content, options) {\n  if (containers.size > 0) {\n    eventManager.emit(0\n    /* Event.Show */, content, options);\n  } else {\n    queue.push({\n      content,\n      options\n    });\n  }\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\nfunction mergeOptions(type, options) {\n  return {\n    ...options,\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  };\n}\nfunction createToastByType(type) {\n  return (content, options) => dispatchToast(content, mergeOptions(type, options));\n}\nfunction toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\ntoast.loading = (content, options) => dispatchToast(content, mergeOptions(TYPE.DEFAULT, {\n  isLoading: true,\n  autoClose: false,\n  closeOnClick: false,\n  closeButton: false,\n  draggable: false,\n  ...options\n}));\nfunction handlePromise(promise, _ref2, options) {\n  let {\n    pending,\n    error,\n    success\n  } = _ref2;\n  let id;\n  if (pending) {\n    id = isStr(pending) ? toast.loading(pending, options) : toast.loading(pending.render, {\n      ...options,\n      ...pending\n    });\n  }\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n  const resolver = (type, input, result) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? {\n      render: input\n    } : input; // if the id is set we know that it's an update\n\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      });\n    }\n    return result;\n  };\n  const p = isFn(promise) ? promise() : promise; //call the resolvers only when needed\n\n  p.then(result => resolver('success', success, result)).catch(err => resolver('error', error, err));\n  return p;\n}\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content, options) => dispatchToast(content, mergeOptions(TYPE.DEFAULT, {\n  theme: 'dark',\n  ...options\n}));\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = id => eventManager.emit(1\n/* Event.Clear */, id);\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return eventManager.emit(5\n  /* Event.ClearWaitingQueue */, params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\ntoast.isActive = id => {\n  let isToastActive = false;\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options);\n    if (toast) {\n      const {\n        props: oldOptions,\n        content: oldContent\n      } = toast;\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      };\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\ntoast.done = id => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Subscribe to change when a toast is added, removed and updated\r\n *\r\n * Usage:\r\n * ```\r\n * const unsubscribe = toast.onChange((payload) => {\r\n *   switch (payload.status) {\r\n *   case \"added\":\r\n *     // new toast added\r\n *     break;\r\n *   case \"updated\":\r\n *     // toast updated\r\n *     break;\r\n *   case \"removed\":\r\n *     // toast has been removed\r\n *     break;\r\n *   }\r\n * })\r\n * ```\r\n */\n\ntoast.onChange = callback => {\n  eventManager.on(4\n  /* Event.Change */, callback);\n  return () => {\n    eventManager.off(4\n    /* Event.Change */, callback);\n  };\n};\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* Event.DidMount */, containerInstance => {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(item => {\n    eventManager.emit(0\n    /* Event.Show */, item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* Event.WillUnmount */, containerInstance => {\n  containers.delete(containerInstance.containerId || containerInstance);\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Event.Show */).off(1\n    /* Event.Clear */).off(5\n    /* Event.ClearWaitingQueue */);\n  }\n});\nexport { Bounce, Flip, Icons, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","ToastTransition","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","useLayoutEffect","onEnter","useEffect","onExited","onExit","current","className","addEventListener","onEntered","e","target","dispatchEvent","Event","removeEventListener","type","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","Svg","_ref","rest","viewBox","width","fill","Warning","d","Info","Success","Error","Spinner","Icons","info","warning","success","error","spinner","maybeIcon","getIcon","Icon","iconProps","cloneElement","useToastContainer","forceUpdate","useReducer","x","toastIds","setToastIds","useState","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","buildToast","removeToast","clearWaitingQueue","clear","length","limit","state","dequeueToast","toastContent","toastProps","staleId","shift","appendToast","isNotValid","options","enableMultiContainer","updateId","delay","closeToast","isNotAnUpdate","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","iconOut","onOpen","onClose","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","playToast","once","bindFocusEvents","unbindFocusEvents","onDragStart","bindDragEvents","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","document","hasFocus","window","onDragMove","onDragEnd","unbindDragEvents","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","stopPropagation","fillRule","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","animationEvent","defaultProps","Toast","Transition","cssClasses","isProgressControlled","closeButtonProps","Close","ref","Bounce","Slide","Zoom","Flip","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","containers","latestInstance","container","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","handlePromise","promise","pending","render","resetParams","resolver","input","result","dismiss","baseParams","params","update","then","catch","err","warn","dark","isActive","oldOptions","oldContent","nextOptions","onChange","containerInstance","item"],"sources":["/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/utils/propValidator.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/utils/constant.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/utils/collapseToast.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/utils/cssTransition.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/utils/mapper.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/core/eventManager.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/components/Icons.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/hooks/useToastContainer.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/hooks/useToast.ts","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/components/CloseButton.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/components/ProgressBar.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/components/Toast.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/components/Transitions.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/components/ToastContainer.tsx","/Users/ksphdinhquy/Desktop/IT/checkinConUDSMP/node_modules/react-toastify/src/core/toast.ts"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import React, { cloneElement, isValidElement } from 'react';\n\nimport { Theme, ToastProps, TypeOptions } from '../types';\nimport { Default, isFn, isNum, isStr } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nconst maybeIcon = (type: string): type is keyof typeof Icons => type in Icons;\n\nexport function getIcon({ theme, type, isLoading, icon }: ToastProps) {\n  let Icon: React.ReactNode = null;\n  const iconProps = { theme, type };\n\n  if (icon === false) {\n    // hide\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon) || isNum(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  } else if (maybeIcon(type)) {\n    Icon = Icons[type](iconProps);\n  }\n\n  return Icon;\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\nimport { getIcon } from '../components/Icons';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n      return () => {\n        toastToRender.clear();\n        eventManager.emit(Event.WillUnmount, instance);\n      };\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      data,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    toastProps.iconOut = getIcon(toastProps);\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { CloseButton } from './CloseButton';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks/useToast';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    iconOut,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  const closeButtonProps = { closeToast, type, theme };\n  let Close: React.ReactNode = null;\n\n  if (closeButton === false) {\n    // hide\n  } else if (isFn(closeButton)) {\n    Close = closeButton(closeButtonProps);\n  } else if (React.isValidElement(closeButton)) {\n    Close = React.cloneElement(closeButton, closeButtonProps);\n  } else {\n    Close = CloseButton(closeButtonProps);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {iconOut != null && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {iconOut}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {Close}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        ...toastProps.style,\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}